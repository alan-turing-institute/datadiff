% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pairwise_column_accuracy.R
\name{pairwise_column_accuracy}
\alias{pairwise_column_accuracy}
\title{Compute pairwise column accuracy}
\usage{
pairwise_column_accuracy(target, result, type, partial = FALSE,
  short = TRUE, column_param = "cols")
}
\arguments{
\item{target}{A patch.}

\item{result}{A patch.}

\item{type}{A patch type.}

\item{partial}{A logical flag. If \code{TRUE}, partial credit is given (see the details),
otherwise the return value is binary. Defaults to \code{FALSE}.}

\item{short}{A logical flag passed to the \code{\link{patch_type}} function. If
\code{TRUE} (the default) the \code{type} argument must specify the patch
type in short form.}

\item{column_param}{The name of the column parameter in patches of the specified type.}
}
\value{
A number between 0 and 1, or \code{NA} .
}
\description{
Returns the column accuracy of the \code{result} w.r.t. the \code{target}
patch as a number in the unit interval.
}
\details{
If \code{partial} is FALSE the return value is binary: a one is returned
if and only if \eqn{A}, the set of columns transformed by the \code{result},
is identical to \eqn{B}, the set of columns transformed by the \code{target}
patch. If \code{partial} is \code{TRUE}, partial credit is given whenever the
two sets of columns share a non-empty intersection. In this case, the return
value is the fraction:
\eqn{|A \cap B|/\mbox{max}(|A|, |B|)}

Returns \code{NA} if the \code{target} contains elementary component(s) of the
given type but the \code{result} does not.

An error is thrown if the \code{target} does not contain an elementary component
of the given type, or if either the \code{target} or the \code{result} is not
column-wise unique for the given patch \code{type}.
}
\examples{
target <- compose_patch(patch_permute(4:1),
                       patch_rescale(4L, shift = 0, scale_factor = 2))
# Column-accurate:
result <- compose_patch(patch_permute(c(4L, 2L, 3L, 1L)),
                        patch_rescale(4L, shift = 10, scale_factor = 20))
pairwise_column_accuracy(target, result, type = "rescale")

# Not column-accurate:
result <- compose_patch(patch_rescale(1L, shift = 10, scale_factor = 20))
pairwise_column_accuracy(target, result, type = "rescale")

}
\seealso{
\code{\link{metric_column_accuracy}}
}
