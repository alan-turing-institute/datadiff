% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/patch_recode.R
\name{patch_recode}
\alias{patch_recode}
\title{\code{patch_recode} S3 class constructor}
\usage{
patch_recode(cols, encoding, one_to_one = TRUE)
}
\arguments{
\item{cols}{A vector of column identifiers.}

\item{encoding}{A non-empty vector whose elements have unique names. If \code{one_to_one} is
\code{TRUE} the elements must also be unique.}

\item{one_to_one}{A logical flag specifying whether the \code{encoding} must be one-to-one.
Defaults to \code{TRUE}.}
}
\value{
A \code{patch_recode} object.
}
\description{
S3 class \code{patch_recode} which extends the \code{patch} and
\code{function} classes to represent a transformation of a tabular dataset
by re-encoding categorical data in one or more columns.
}
\examples{
head(mtcars)

# Columns 8 and 9 of mtcars contain binary data.
p <- patch_recode(c(8L, 9L), encoding = c("0" = FALSE, "1" = TRUE))

# The following are equivalent:
head(apply_patch(mtcars, p))
head(p(mtcars))

# Attempting to apply a patch to an incompatible data frame throws an error.
\dontrun{
# Column 1 does not contain binary data.
p <- patch_recode(1L, c("0" = FALSE, "1" = TRUE))
p(mtcars)
}

}
\seealso{
\code{\link{is_valid_columns}} \code{\link{is_compatible_columns}}
}
