% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/columnwise_candidates.R
\name{columnwise_candidates}
\alias{columnwise_candidates}
\title{Generate candidate patches by columnwise comparison}
\usage{
columnwise_candidates(df1, df2, mismatch = purrr::partial(diffness, scale =
  FALSE), patch_generators = list(gen_patch_transform),
  patch_penalties = 0.2, break_penalty = 0.95,
  penalty_scaling = purrr::partial(ks_scaling, nx = nrow(df1), ny =
  nrow(df2)), mismatch_attr = "mismatch", penalty_attr = "penalty",
  verbose = FALSE)
}
\arguments{
\item{df1, df2}{A pair of data frames.}

\item{mismatch}{Mismatch method. The default is (unscaled) \code{\link{diffness}}.}

\item{patch_generators}{A list of patch generator functions from which, for each pair of columns (one
each from \code{df1} & \code{df2}), candidate patches will be generated.}

\item{patch_penalties}{A numeric vector of patch penalties corresponding to the \code{patch_generators}
list. The lengths of these two arguments must be equal.}

\item{break_penalty}{The penalty associated with a break patch.}

\item{penalty_scaling}{A function to be used to scale the penalty associated with each patch.
Defaults to \code{\link{ks_scaling}}.}

\item{mismatch_attr}{The name of the attribute containing the calculated mismatch associated with
each candidate patch in the return value. Defaults to "mismatch".}

\item{penalty_attr}{The name of the attribute containing the calculated penalty associated with
each candidate patch in the return value. Defaults to "penalty".}

\item{verbose}{A logical flag.}
}
\value{
A nested list of patch objects with two numeric attributes:
\code{mismatch} and \code{penalty}.
}
\description{
Generates a candidate patch for each pair of columns (one each from
\code{df1} & \code{df2}) and returns them in a nested list.

Possible
candidates are:
\itemize{
  \item the identity patch
  \item a patch generated from one of the given \code{patch_generators}
  \item a break patch.
}
The "total cost" of each of these possible candidates is computed as the
sum of the (columwise) mismatch (after application of the patch) plus the
(scaled) penalty associated with the patch, except for the case of the break
patch for which the mismatch is always taken to be zero.

The actual candidate is then the one with the minimum total cost.
}
