% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/terminal_column_position.R
\name{terminal_column_position}
\alias{terminal_column_position}
\title{Infer a terminal column position}
\usage{
terminal_column_position(column_index, patch, initial = TRUE)
}
\arguments{
\item{column_index}{A scalar integer column index specifying the column of interest \emph{after}
application of the \code{patch}, if \code{initial} is \code{TRUE} or
\emph{before} application of the \code{patch} if \code{initial} is \code{FALSE}.}

\item{patch}{A patch object in which all column identifiers are integer column indices (not
column names).}

\item{initial}{A logical flag. If \code{TRUE} (the default), the initial column position is
returned (i.e. the position which is moved by the given \code{patch} to the
given \code{column_index}). Otherwise the final column position is
returned (i.e. the position to which the given \code{column_index} is moved
by the given \code{patch}).}
}
\value{
An integer column position.
}
\description{
Returns the terminal column position corresponding to a given column index in
a patched data frame (i.e. before or after application of a patch). Takes into
account the three standard patch types whose application affects column positions:
\code{insert}, \code{delete} and \code{permute}.
}
\examples{
# A rescale patch does not affect column position:
terminal_column_position(4L, patch_rescale(2L, shift = 0, scale_factor = 2))
# Delete patch:
terminal_column_position(4L, patch_delete(1L))
# Insert patch:
terminal_column_position(4L, patch_insert(1L, data.frame(NA)))
# Permute patch:
terminal_column_position(4L, patch_permute(4:1))
# Composed patch:
terminal_column_position(4L, compose_patch(patch_permute(4:1), patch_delete(1L)))

}
\seealso{
\code{decompose_patch}
}
